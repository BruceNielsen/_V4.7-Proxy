<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIACoEAAAJgAAABAQAAABACAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAIAQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAVQAAADgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAACqAAAAqgAAAHEAAAAAAAAAOAAAAFUAAAAcAAAAAAAA
        AAAAAABVAAAAVQAAABwAAAAAAAAAAAAAABwAAABVAAAAVQAAABwAAAAAAAAAAAAAAKoAAAD/AAAAqgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAA/wAAAP8AAAD/AAAA/wAAAOIAAADGAAAA/wAA
        AFUAAAAAAAAAAAAAAP8AAAD/AAAAVQAAAAAAAAAAAAAA4gAAAP8AAADiAAAAHAAAAAAAAAAAAAAAqgAA
        AP8AAACqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI0AAAD/AAAA/wAAAHEAAABxAAAA/wAA
        AP8AAAD/AAAAVQAAAAAAAAAAAAAA/wAAAP8AAABVAAAAAAAAAKoAAAD/AAAA/wAAABwAAAAAAAAAAAAA
        AAAAAACqAAAA/wAAAKoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqgAAAP8AAACqAAAAAAAA
        AAAAAABVAAAA/wAAAP8AAABVAAAAAAAAAAAAAAD/AAAA/wAAAFUAAABVAAAA/wAAAP8AAABVAAAAAAAA
        AAAAAAAAAAAAAAAAAKoAAAD/AAAAxgAAAFUAAABVAAAAHAAAAAAAAAAAAAAAAAAAAAAAAABxAAAA/wAA
        AOIAAAA4AAAAAAAAAAAAAAD/AAAA/wAAAFUAAAAAAAAAAAAAAP8AAAD/AAAAcQAAAOIAAAD/AAAAqgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAqgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAxgAAABwAAAAAAAAAAAAA
        AAAAAADGAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAVQAAAAAAAAAAAAAA/wAAAP8AAAD/AAAA/wAA
        AOIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACqAAAA/wAAAOIAAACqAAAAqgAAAP8AAAD/AAAA4gAA
        ABwAAAAAAAAAAAAAAAAAAABVAAAAqgAAAKoAAACqAAAA/wAAAP8AAABVAAAAAAAAAAAAAAD/AAAA/wAA
        AKoAAAD/AAAA/wAAAFUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKoAAAD/AAAAqgAAAAAAAAAAAAAAHAAA
        AP8AAAD/AAAAcQAAAAAAAAAAAAAAHAAAAAAAAAAAAAAAAAAAABwAAAD/AAAA/wAAAFUAAAAAAAAAAAAA
        AP8AAAD/AAAAVQAAAI0AAAD/AAAA4gAAABwAAAAAAAAAAAAAAAAAAAAAAAAAqgAAAP8AAACqAAAAAAAA
        AAAAAAAAAAAAqgAAAP8AAACqAAAAAAAAAAAAAAD/AAAA4gAAAKoAAACqAAAA4gAAAP8AAAD/AAAAHAAA
        AAAAAAAAAAAA/wAAAP8AAABVAAAAAAAAAMYAAAD/AAAA4gAAABwAAAAAAAAAAAAAAAAAAACqAAAA/wAA
        AKoAAAAAAAAAAAAAAAAAAADGAAAA/wAAAKoAAAAAAAAAAAAAAOIAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AFUAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAFUAAAAAAAAAHAAAAOIAAAD/AAAAqgAAAAAAAAAAAAAAAAAA
        AKoAAAD/AAAAxgAAAFUAAABVAAAAxgAAAP8AAAD/AAAAVQAAAAAAAAAAAAAAAAAAABwAAABVAAAAVQAA
        AFUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAVQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAqgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAKoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAABVAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABxAAAAqgAAAKoAAACqAAAAqgAAAI0AAAA4AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAFUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKoAAACqAAAAOAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAABVAAAAVQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVQAAAFUAAAAcAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABVAAAAqgAAAKoAAAA4AAAAAAAAAFUAAABVAAAAAAAAAAAAAAAAAAAAVQAA
        AP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAFUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAcQAAAP8AAAD/AAAA/wAAAP8AAABVAAAA/wAAAP8AAAAAAAAAAAAA
        AAAAAABVAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAVQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADiAAAA/wAAAOIAAABVAAAAxgAAAP8AAAD/AAAA/wAA
        AAAAAAAAAAAAAAAAAFUAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA
        AP8AAABVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAVQAAAAAAAAAAAAAAxgAA
        AP8AAAD/AAAAAAAAAAAAAAAAAAAAVQAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD/AAAA/wAAAFUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAABVAAAAAAAA
        AAAAAABVAAAA/wAAAP8AAAAAAAAAAAAAAAAAAABVAAAA/wAAAP8AAABVAAAAVQAAAFUAAABVAAAAHAAA
        AAAAAAAAAAAAAAAAAP8AAAD/AAAAVQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAA
        AFUAAAAAAAAAAAAAAFUAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAFUAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAABVAAAAAAAAAAAAAAAAAAAA/wAAAP8AAABVAAAAAAAAAAAAAAA4AAAAqgAAAKoAAAAAAAAAAAAA
        AP8AAAD/AAAAVQAAAAAAAAAAAAAAVQAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAVQAAAP8AAAD/AAAAqgAA
        AKoAAACqAAAAqgAAADgAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAOIAAAAcAAAAAAAAAHEAAAD/AAAA/wAA
        AAAAAAAAAAAA/wAAAP8AAABVAAAAAAAAAAAAAABVAAAA/wAAAP8AAAAAAAAAAAAAAAAAAABVAAAA/wAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAA4gAAAP8AAACqAAAA/wAA
        AP8AAACqAAAAAAAAAAAAAAD/AAAA/wAAAFUAAAAAAAAAAAAAAFUAAAD/AAAA/wAAAAAAAAAAAAAAAAAA
        AFUAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAA4AAAA4gAA
        AP8AAAD/AAAA4gAAABwAAAAAAAAAAAAAAP8AAAD/AAAAVQAAAAAAAAAAAAAAVQAAAP8AAAD/AAAAAAAA
        AAAAAAAAAAAAVQAAAP8AAAD/AAAAVQAAAFUAAABVAAAAVQAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAVQAAAFUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABVAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAqgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAABxAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////j/CMYY/gDGGP4AxDj+MMB4Hh
        jA+AcAwfgDgMD4w3DAeOMAxDjjAcQ4A4fH+Af/x/gP/8f////H///////////4/x/hOP8fwDj/H8A4/x
        /GOP8fxjgHH8Y4BxjGOAcIxjj/AMY4/wDGOAfz//gH///4B/////////KAAAABAAAAAgAAAAAQAgAAAA
        AABABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAjQAAAAAAAAAAAAAAAAAAAA4AAAC4AAAAxgAA
        AHgAAABxAAAAAAAAAKoAAAAcAAAAPwAAAKIAAAAOAAAAVQAAANQAAAAAAAAAAAAAAAAAAABNAAAA6QAA
        ADgAAADUAAAAqgAAAAAAAAD/AAAAPwAAAOkAAABcAAAAAAAAAFUAAADwAAAAqgAAAHgAAAAHAAAAHAAA
        AOkAAACNAAAAvwAAAKoAAAAAAAAA/wAAANQAAACiAAAAAAAAAAAAAABVAAAA4gAAAFUAAADGAAAAmwAA
        AAAAAAAcAAAAVQAAALEAAACqAAAAAAAAAP8AAACiAAAAzQAAAAcAAAAAAAAAVQAAANQAAAAAAAAAXAAA
        ANQAAAAAAAAA8AAAANQAAAD3AAAAXAAAAAAAAAD/AAAAKgAAALAAAACpAAAAAAAAAFUAAADwAAAAqgAA
        APAAAAB/AAAAAAAAAAcAAAAqAAAAFQAAAAAAAAAAAAAA/wAAACoAAAAAAAAAAAAAAAAAAAAcAAAAVQAA
        AFUAAAAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANQAAAAjAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABwAAACqAAAAAAAAAAAAAAAAAAAAAAAAAKoAAAAcAAAAAAAAAAAAAAAAAAAAcQAAANQAAABjAAAAqgAA
        AAAAAAAqAAAA/wAAAAAAAAAAAAAAAAAAAAAAAAD/AAAAKgAAAAAAAAAAAAAAAAAAAPcAAABjAAAAogAA
        AP8AAAAAAAAAKgAAAP8AAAAqAAAAKgAAAAcAAAAAAAAA/wAAACoAAAAAAAAAAAAAAAAAAAD/AAAAKgAA
        ACoAAAD/AAAAAAAAACoAAAD/AAAA1AAAANQAAAAjAAAAAAAAAP8AAABUAAAAKgAAANQAAAAAAAAA/wAA
        ACoAAAAqAAAA/wAAAAAAAAAqAAAA/wAAAAAAAAAAAAAAAAAAAAAAAAD/AAAAvgAAAOkAAACpAAAAAAAA
        AP8AAAAqAAAAKgAAAP8AAAAAAAAAKgAAAP8AAACqAAAAqgAAADgAAAAAAAAAAAAAAAAAAAAqAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAABVAAAAVQAAAFUAAAAcAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wAAOCAAADghAAAAIwAABCEAACQhAAAEZwAAD+cAAP//
        AAA84QAAPOEAAAThAAAEIQAAPCEAAAd/AAAH/wAA
</value>
  </data>
</root>